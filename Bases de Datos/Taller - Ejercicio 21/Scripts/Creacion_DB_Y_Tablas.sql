CREATE DATABASE IF NOT EXISTS EVENT_PRO_ESPACIOS_MAG;
USE EVENT_PRO_ESPACIOS_MAG;

-- CONFIGURACIÃ“N DE CAPACIDAD
CREATE TABLE CONFIGURACION (
    ID_CONFIGURACION INT AUTO_INCREMENT PRIMARY KEY,
    TIPO_CONFIGURACION VARCHAR(100) NOT NULL,
    CAPACIDAD INT NOT NULL,
    FRANJA_HORARIA TIME NOT NULL
);

-- TIPOS DE RECINTO
CREATE TABLE TIPO_RECINTO(
    ID_TIPO_RECINTO INT AUTO_INCREMENT PRIMARY KEY,
    TIPO VARCHAR(50) NOT NULL
);

-- RECINTOS
CREATE TABLE RECINTO (
    ID_RECINTO INT AUTO_INCREMENT PRIMARY KEY,
    NOMBRE VARCHAR(150) NOT NULL,
    ID_TIPO_RECINTO INT NOT NULL,
    UBICACION VARCHAR(100),
    DIMENSIONES VARCHAR(100),
    ID_CONFIGURACION INT,
    CARACTERISTICAS VARCHAR(200),
    TARIFA ENUM('HORA','DIA') DEFAULT 'HORA',
    FOREIGN KEY (ID_TIPO_RECINTO) REFERENCES TIPO_RECINTO(ID_TIPO_RECINTO),
    FOREIGN KEY (ID_CONFIGURACION) REFERENCES CONFIGURACION(ID_CONFIGURACION)
);

-- DISPONIBILIDAD DE RECINTOS
CREATE TABLE DISPONIBILIDAD_RECINTO(
    ID_RECINTO INT NOT NULL,
    ESTADO ENUM('OCUPADO','MANTENIMIENTO') NOT NULL,
    FECHA_INICIO DATETIME NOT NULL,
    FECHA_FIN DATETIME NOT NULL,
    PRIMARY KEY (ID_RECINTO, FECHA_INICIO,FECHA_FIN),
    FOREIGN KEY (ID_RECINTO) REFERENCES RECINTO(ID_RECINTO) ON DELETE CASCADE
);

-- TIPO DE EQUIPOS
CREATE TABLE TIPO_EQUIPAMENTO(
    ID_TIPO_EQUIPAMENTO INT AUTO_INCREMENT PRIMARY KEY,
    TIPO VARCHAR(50) NOT NULL,
    DESCRIPCION VARCHAR(255),
    VALOR_REPOSICION DECIMAL(10,2),
    VIDA_UTIL VARCHAR(20)
);

-- ALMACENAMIENTO
CREATE TABLE ALMACENAMIENTO(
    ID_ALMACENAMIENTO INT AUTO_INCREMENT PRIMARY KEY,
    UBICACION VARCHAR(100) NOT NULL,
    ESPECIFICACION VARCHAR(255)
);

-- INVENTARIO DE EQUIPOS
CREATE TABLE EQUIPAMENTO(
    ID_EQUIPAMENTO INT AUTO_INCREMENT PRIMARY KEY,
    ID_TIPO_EQUIPAMENTO INT NOT NULL,
    CANTIDAD_DISPONIBLE INT DEFAULT 0,
    ESTADO ENUM('DISPONIBLE','MANTENIMIENTO','EN USO') DEFAULT 'DISPONIBLE',
    ID_ALMACENAMIENTO INT,
    MANTENIMIENTO_REQUERIDO ENUM('SI','NO') DEFAULT 'NO',
    FOREIGN KEY (ID_TIPO_EQUIPAMENTO) REFERENCES TIPO_EQUIPAMENTO(ID_TIPO_EQUIPAMENTO),
    FOREIGN KEY (ID_ALMACENAMIENTO) REFERENCES ALMACENAMIENTO(ID_ALMACENAMIENTO)
);

-- TIPO DE SERVICIOS
CREATE TABLE CATEGORIA_SERVICIO(
    ID_CATEGORIA_SERVICIOS INT AUTO_INCREMENT PRIMARY KEY,
    CATEGORIA VARCHAR(50) NOT NULL,
    DESCRIPCION VARCHAR(255),
    PRECIO_BASE DECIMAL(10,2) NOT NULL
);

-- PROVEEDORES
CREATE TABLE PROVEEDOR(
    ID_PROVEEDOR INT AUTO_INCREMENT PRIMARY KEY,
    NOMBRE VARCHAR(100) NOT NULL,
    TIPO ENUM('INTERNO','EXTERNO') DEFAULT 'INTERNO'
);

-- SERVICIOS
CREATE TABLE SERVICIO(
    ID_SERVICIO INT AUTO_INCREMENT PRIMARY KEY,
    NOMBRE VARCHAR(150) UNIQUE NOT NULL,
    ID_CATEGORIA INT NOT NULL,
    ID_PROVEEDOR INT NOT NULL,
    CONDICIONES_CONTRATACION TEXT,
    UNIDAD_FACTURACION ENUM('HORA','PERSONA','EVENTO') DEFAULT 'EVENTO',
    PLAZO_MIN_SOLICITUD INT DEFAULT 1,
    FOREIGN KEY (ID_CATEGORIA) REFERENCES CATEGORIA_SERVICIO(ID_CATEGORIA_SERVICIOS),
    FOREIGN KEY (ID_PROVEEDOR) REFERENCES PROVEEDOR(ID_PROVEEDOR)
);

-- CLIENTE
CREATE TABLE CLIENTE(
    ID_CLIENTE INT AUTO_INCREMENT PRIMARY KEY,
    TIPO_CLIENTE ENUM('CORPORATIVO','AGENCIA','PARTICULAR') NOT NULL,
    NOMBRE VARCHAR(200) NOT NULL,
    TIPO_DOCUMENTO ENUM('CEDULA DE CIUDADANIA','CEDULA DE EXTRANJERIA','PASAPORTE','NIT'),
    NUM_DOCUMENTO VARCHAR(20) UNIQUE NOT NULL ,
    DIRECCION VARCHAR(300),
    TELEFONO VARCHAR(20) UNIQUE NOT NULL,
    CORREO VARCHAR(200) UNIQUE NOT NULL ,
    CLASIFICACION_VOLUMEN ENUM('ALTA','MEDIA','BAJA'),
    CONDICIONES_ESPECIALES TEXT
);

-- PERSONA REGISTRADA COMO CONTACTO
CREATE TABLE PERSONA_CONTACTO (
    ID_PERSONA_CONTACTO INT AUTO_INCREMENT PRIMARY KEY,
    NOMBRE_COMPLETO VARCHAR(100),
    TELEFONO VARCHAR(20)UNIQUE NOT NULL ,
    DIRECCION VARCHAR(100),
    CORREO VARCHAR(100) UNIQUE
);

-- CONTACTO DE CADA CLIENTE
CREATE TABLE CLIENTE_CONTACTO (
    ID_CLIENTE INT NOT NULL,
    ID_PERSONA_CONTACTO INT NOT NULL,
    PRIMARY KEY (ID_CLIENTE, ID_PERSONA_CONTACTO),
    FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE) ON DELETE CASCADE,
    FOREIGN KEY (ID_PERSONA_CONTACTO) REFERENCES PERSONA_CONTACTO(ID_PERSONA_CONTACTO) ON DELETE CASCADE
);

-- TIPO PERSONAL
CREATE TABLE TIPO_PERSONAL(
    ID_TIPO_PERSONAL INT AUTO_INCREMENT PRIMARY KEY,
    TIPO VARCHAR(50) UNIQUE NOT NULL,
    RESPONSABILIDADES_ESPECIFICAS VARCHAR(255),
    TARIFA_APLICABLE DECIMAL(10,2)
);

-- PERSONAL
CREATE TABLE PERSONAL (
    ID_PERSONAL INT AUTO_INCREMENT PRIMARY KEY,
    NOMBRE VARCHAR(100),
    APELLIDO VARCHAR(100),
    ID_TIPO_PERSONAL INT,
    FOREIGN KEY (ID_TIPO_PERSONAL) REFERENCES TIPO_PERSONAL(ID_TIPO_PERSONAL)
);

-- TIPO DE EVENTO
CREATE TABLE TIPO_EVENTO(
    ID_TIPO_EVENTO INT AUTO_INCREMENT PRIMARY KEY,
    TIPO VARCHAR(30) UNIQUE NOT NULL ,
    DESCRIPCION VARCHAR(255)
);

-- EVENTO
CREATE TABLE EVENTO(
    ID_EVENTO INT AUTO_INCREMENT PRIMARY KEY,
    TITULO_EVENTO VARCHAR(200),
    -- FK
    ID_TIPO_EVENTO INT,
    -- FK
    ID_CLIENTE INT,
    FECHA_HORA_INICIO DATETIME,
    FECHA_HORA_FIN DATETIME,
    MONTAJE_SOLICITADO VARCHAR(200),
    NUMERO_ESTIMADO_ASISTENTES INT,
    PRESUPUESTO_APROBADO DECIMAL (10,2),
    ESTADO_ACTUAL VARCHAR(500),
    -- FK
    ID_EMPLEADO_RESPONSABLE INT,
    FOREIGN KEY (ID_TIPO_EVENTO) REFERENCES TIPO_EVENTO (ID_TIPO_EVENTO),
    FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE),
    FOREIGN KEY (ID_EMPLEADO_RESPONSABLE) REFERENCES PERSONAL (ID_PERSONAL)
);

-- DETALLE DE RECINTOS
CREATE TABLE DETALLE_RECINTOS(
    ID_DETALLE_RECINTOS INT AUTO_INCREMENT PRIMARY KEY,
    ID_EVENTO INT NOT NULL,
    ID_RECINTO INT NOT NULL,
    ID_CONFIGURACION INT,
    FECHA_HORA_INICIO DATETIME NOT NULL,
    FECHA_HORA_FIN DATETIME NOT NULL,
    PRECIO_HORA DECIMAL(10,2),
    HORAS_RESERVADAS DECIMAL(5,2),
    SUBTOTAL DECIMAL(10,2) AS (COALESCE(HORAS_RESERVADAS,0) * COALESCE(PRECIO_HORA,0)) STORED,
    MONTAJE_ESPECIFICO VARCHAR(200),
    OBSERVACIONES TEXT,
    FOREIGN KEY (ID_EVENTO) REFERENCES EVENTO(ID_EVENTO) ON DELETE CASCADE,
    FOREIGN KEY (ID_RECINTO) REFERENCES RECINTO(ID_RECINTO),
    FOREIGN KEY (ID_CONFIGURACION) REFERENCES CONFIGURACION(ID_CONFIGURACION)
);

-- DETALLE DE SERVICIOS
CREATE TABLE DETALLE_SERVICIOS(
    ID_DETALLE_SERVICIOS INT AUTO_INCREMENT PRIMARY KEY,
    ID_EVENTO INT NOT NULL,
    ID_SERVICIO INT NOT NULL,
    CANTIDAD INT NOT NULL DEFAULT 1,
    PRECIO_UNITARIO DECIMAL(10,2),
    SUBTOTAL DECIMAL(10,2) AS (COALESCE(CANTIDAD,0) * COALESCE(PRECIO_UNITARIO,0)) STORED,
    OBSERVACIONES TEXT,
    FOREIGN KEY (ID_EVENTO) REFERENCES EVENTO(ID_EVENTO) ON DELETE CASCADE,
    FOREIGN KEY (ID_SERVICIO) REFERENCES SERVICIO(ID_SERVICIO)
);

-- DISPONIBILIDAD DE PERSONAL
CREATE TABLE DISPONIBILIDAD_PERSONAL(
    ID_PERSONAL INT NOT NULL,
    ESTADO ENUM('DISPONIBLE','ASIGNADO','VACACIONES','CAPACITACION') NOT NULL,
    EVENTO_ASIGNADO INT NULL,
    FECHA_INICIO DATETIME NOT NULL,
    FECHA_FIN DATETIME NOT NULL,
    PRIMARY KEY (ID_PERSONAL, FECHA_INICIO, FECHA_FIN),
    FOREIGN KEY (EVENTO_ASIGNADO) REFERENCES EVENTO(ID_EVENTO) ON DELETE SET NULL,
    FOREIGN KEY (ID_PERSONAL) REFERENCES PERSONAL(ID_PERSONAL) ON DELETE CASCADE
);

-- EVENTOS ANTERIORES DE CADA CLIENTE
CREATE TABLE CLIENTE_EVENTOS_ANTERIORES (
    ID_CLIENTE INT NOT NULL,
    ID_EVENTO INT NOT NULL,
    PRIMARY KEY (ID_CLIENTE, ID_EVENTO),
    FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE) ON DELETE CASCADE,
    FOREIGN KEY (ID_EVENTO) REFERENCES EVENTO(ID_EVENTO) ON DELETE CASCADE
);

-- DESCUENTOS
CREATE TABLE DESCUENTO (
    ID_DESCUENTO INT AUTO_INCREMENT PRIMARY KEY,
    NOMBRE VARCHAR(100) UNIQUE NOT NULL,
    VALOR DECIMAL(10,2) NOT NULL,
    TIPO ENUM('PORCENTAJE','MONTO') NOT NULL
);

CREATE TABLE DETALLE_COSTO(
    ID_DETALLE_COSTO INT AUTO_INCREMENT PRIMARY KEY,
    ID_EVENTO INT NOT NULL,
    TIPO_COSTO ENUM('RECINTO','SERVICIO','EQUIPAMIENTO','PERSONAL','OTROS') NOT NULL,
    ID_RECINTO INT NULL,
    ID_SERVICIO INT NULL,
    ID_EQUIPAMENTO INT NULL,
    ID_PERSONAL INT NULL,
    CONCEPTO VARCHAR(200) NOT NULL,
    CANTIDAD DECIMAL(10,2) NOT NULL DEFAULT 1,
    UNIDAD_MEDIDA ENUM('HORA','DIA','UNIDAD','PERSONA','EVENTO') DEFAULT 'UNIDAD',
    PRECIO_UNITARIO DECIMAL(12,2) NOT NULL,
    SUBTOTAL DECIMAL(14,2) AS (COALESCE(CANTIDAD,0) * COALESCE(PRECIO_UNITARIO,0)) STORED,
    OBSERVACIONES TEXT,
    FOREIGN KEY (ID_EVENTO) REFERENCES EVENTO(ID_EVENTO) ON DELETE CASCADE,
    FOREIGN KEY (ID_RECINTO) REFERENCES RECINTO(ID_RECINTO),
    FOREIGN KEY (ID_SERVICIO) REFERENCES SERVICIO(ID_SERVICIO),
    FOREIGN KEY (ID_EQUIPAMENTO) REFERENCES EQUIPAMENTO(ID_EQUIPAMENTO),
    FOREIGN KEY (ID_PERSONAL) REFERENCES PERSONAL(ID_PERSONAL),
    CHECK (
    (TIPO_COSTO = 'RECINTO'      AND ID_RECINTO IS NOT NULL AND ID_SERVICIO IS NULL AND ID_EQUIPAMENTO IS NULL AND ID_PERSONAL IS NULL) OR
    (TIPO_COSTO = 'SERVICIO'     AND ID_SERVICIO IS NOT NULL AND ID_RECINTO IS NULL AND ID_EQUIPAMENTO IS NULL AND ID_PERSONAL IS NULL) OR
    (TIPO_COSTO = 'EQUIPAMIENTO' AND ID_EQUIPAMENTO IS NOT NULL AND ID_RECINTO IS NULL AND ID_SERVICIO IS NULL AND ID_PERSONAL IS NULL) OR
    (TIPO_COSTO = 'PERSONAL'     AND ID_PERSONAL IS NOT NULL AND ID_RECINTO IS NULL AND ID_SERVICIO IS NULL AND ID_EQUIPAMENTO IS NULL) OR
    (TIPO_COSTO = 'OTROS'        AND ID_RECINTO IS NULL AND ID_SERVICIO IS NULL AND ID_EQUIPAMENTO IS NULL AND ID_PERSONAL IS NULL)
    )
);

-- DETALLE PERSONAL
CREATE TABLE DETALLE_PERSONAL(
    ID_DETALLE_PERSONAL INT AUTO_INCREMENT PRIMARY KEY,
    ID_EVENTO INT NOT NULL,
    ID_PERSONAL INT NOT NULL,
    ROL VARCHAR(100),
    HORAS_TRABAJADAS DECIMAL(6,2) DEFAULT 0,
    TARIFA_HORA DECIMAL(10,2) DEFAULT 0,
    SUBTOTAL DECIMAL(12,2) AS (COALESCE(HORAS_TRABAJADAS,0) * COALESCE(TARIFA_HORA,0)) STORED,
    FOREIGN KEY (ID_EVENTO) REFERENCES EVENTO(ID_EVENTO) ON DELETE CASCADE,
    FOREIGN KEY (ID_PERSONAL) REFERENCES PERSONAL(ID_PERSONAL)
);

-- COTIZACION
CREATE TABLE COTIZACION (
    ID_COTIZACION INT AUTO_INCREMENT PRIMARY KEY,
    FECHA_EMISION DATETIME,
    VALIDEZ ENUM('VALIDO','INVALIDO'),
    -- FK
    ID_CLIENTE INT,
    -- FK
    ID_TIPO_EVENTO INT,
    -- FK
    ID_RECINTO INT,
    ID_DETALLE_RECINTOS INT,
    -- FK
    ID_DETALLE_SERVICIOS INT,
    -- FK
    ID_DETALLE_COSTO INT,
    CONDICION_PAGO TEXT,
    REQUISITO_CONFIRMACION TEXT,
    -- FK
    ID_DESCUENTO INT,
    OBSERVACIONES TEXT,
    FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE),
    FOREIGN KEY (ID_TIPO_EVENTO) REFERENCES TIPO_EVENTO(ID_TIPO_EVENTO),
    FOREIGN KEY (ID_DETALLE_SERVICIOS) REFERENCES DETALLE_SERVICIOS(ID_DETALLE_SERVICIOS),
    FOREIGN KEY (ID_DETALLE_COSTO) REFERENCES DETALLE_COSTO(ID_DETALLE_COSTO),
    FOREIGN KEY (ID_DESCUENTO) REFERENCES DESCUENTO (ID_DESCUENTO)
)AUTO_INCREMENT = 1000;

-- FIRMAS AUTORIZADAS
CREATE TABLE FIRMAS_AUTORIZADAS (
    ID_FIRMAS_AUTORIZADAS INT AUTO_INCREMENT PRIMARY KEY,
    NOMBRE VARCHAR(100) NOT NULL,
    APELLIDO VARCHAR(100) NOT NULL,
    FIRMA_DIGITAL BLOB NOT NULL
);

-- CRONOGRAMA DE PAGO
CREATE TABLE CRONOGRAMA_PAGO (
    ID_CRONOGRAMA_PAGO INT AUTO_INCREMENT PRIMARY KEY,
    FECHA_VENCIMIENTO DATE,
    ID_DETALLE_COSTO INT,
    FOREIGN KEY (ID_DETALLE_COSTO) REFERENCES DETALLE_COSTO(ID_DETALLE_COSTO)
);

-- CONTRATO
CREATE TABLE CONTRATO (
    ID_CONTRATO INT AUTO_INCREMENT PRIMARY KEY,
    FECHA_FIRMA DATETIME,
    -- FK
    ID_CLIENTE INT,
    -- FK
    ID_EVENTO INT,
    CONDICIONES_GENERALES TEXT,
    -- FK
    ID_DETALLE_SERVICIOS INT,
    -- FK
    ID_CRONOGRAMA_PAGO INT,
    POLITICA_CANCELACION TEXT,
    PENALIZACION TEXT,
    CLAUSULAS_ESPECIALES TEXT,
    ANEXOS BLOB,
    -- FK
    ID_FIRMAS_AUTORIZADAS INT,
    FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE (ID_CLIENTE),
    FOREIGN KEY (ID_EVENTO) REFERENCES EVENTO (ID_EVENTO),
    FOREIGN KEY (ID_DETALLE_SERVICIOS) REFERENCES DETALLE_SERVICIOS (ID_DETALLE_SERVICIOS),
    FOREIGN KEY (ID_CRONOGRAMA_PAGO) REFERENCES  CRONOGRAMA_PAGO (ID_CRONOGRAMA_PAGO),
    FOREIGN KEY (ID_FIRMAS_AUTORIZADAS) REFERENCES FIRMAS_AUTORIZADAS (ID_FIRMAS_AUTORIZADAS)
);

-- ACTIVIDADES
CREATE TABLE ACTIVIDADES (
    ID_ACTIVIDADES INT AUTO_INCREMENT PRIMARY KEY,
    NOMBRE VARCHAR(100) UNIQUE NOT NULL,
    DESCRIPCION VARCHAR(255)
);

-- CRONOGRAMA DE ACTIVIDADES
CREATE TABLE CRONOGRAMA_ACTIVIDADES (
    ID_CRONOGRAMA_ACTIVIDADES INT AUTO_INCREMENT PRIMARY KEY,
    FECHA_INICIO DATETIME,
    FECHA_FIN DATETIME,
    ID_ACTIVIDADES INT,
    FOREIGN KEY (ID_ACTIVIDADES) REFERENCES ACTIVIDADES (ID_ACTIVIDADES)
);


-- MENU
CREATE TABLE MENU (
    ID_MENU INT AUTO_INCREMENT PRIMARY KEY,
    HORARIO VARCHAR(255) NOT NULL,
    CATEGORIA ENUM('DESAYUNO','ALMUERZO','MERIENDA','CENA','COMIDA','BEBIDAS','OTROS') NOT NULL,
    DESCRIPCION VARCHAR(255) NOT NULL,
    COSTO_BASE DECIMAL(10,2) NOT NULL
);

-- CATHERING
CREATE TABLE CATERING (
    ID_CATERING INT AUTO_INCREMENT PRIMARY KEY,
    -- FK
    ID_PERSONAL_ENCARGADO INT,
    -- FK
    ID_EVENTO INT NOT NULL,
    FOREIGN KEY (ID_PERSONAL_ENCARGADO) REFERENCES PERSONAL (ID_PERSONAL),
    FOREIGN KEY (ID_EVENTO) REFERENCES EVENTO (ID_EVENTO)
);

-- CATERING MENU
CREATE TABLE CATERING_MENU (
    ID_CATERING_MENU INT AUTO_INCREMENT PRIMARY KEY,
    ID_CATERING INT,
    ID_MENU INT,
    FOREIGN KEY (ID_CATERING) REFERENCES CATERING(ID_CATERING),
    FOREIGN KEY (ID_MENU) REFERENCES MENU(ID_MENU)
);

-- DETALLE DE CATERING
CREATE TABLE DETALLE_CATERING (
    ID_DETALLE_CATERING INT AUTO_INCREMENT PRIMARY KEY,
    -- FK
    ID_CATERING_MENU INT NOT NULL,
    CANTIDAD INT NOT NULL DEFAULT 1,
    PRECIO_UNITARIO DECIMAL(10,2) NOT NULL,
    SUBTOTAL DECIMAL(10,2) AS (COALESCE(CANTIDAD,0) * COALESCE(PRECIO_UNITARIO,0)) STORED,
    FOREIGN KEY (ID_CATERING_MENU) REFERENCES CATERING_MENU (ID_CATERING_MENU)
);


CREATE TABLE PLANIFICACION (
    ID_PLANIFICACION INT AUTO_INCREMENT PRIMARY KEY,
    -- FK
    ID_EVENTO INT,
    -- FK
    -- REQUIERE TABLA ACTIVIDADES
    ID_CRONOGRAMA_ACTIVIDADES INT,
    -- FK
    ID_HORARIO_ESPECIFICO INT,
    -- FK
    ID_RECINTO INT,
    -- FK
    ID_FRANJA_HORARIA_SEGUN_CONFIGURACION INT,
    NECESIDADES_TECNICAS TEXT,
    -- FK
    ID_DETALLE_CATERING INT,
    -- FK
    ID_DETALLE_PERSONAL_ASIGNADO INT,
    FOREIGN KEY (ID_EVENTO) REFERENCES EVENTO (ID_EVENTO),
    FOREIGN KEY (ID_CRONOGRAMA_ACTIVIDADES) REFERENCES CRONOGRAMA_ACTIVIDADES (ID_CRONOGRAMA_ACTIVIDADES),
    FOREIGN KEY (ID_RECINTO) REFERENCES  RECINTO (ID_RECINTO),
    FOREIGN KEY (ID_FRANJA_HORARIA_SEGUN_CONFIGURACION) REFERENCES CONFIGURACION (ID_CONFIGURACION),
    FOREIGN KEY (ID_DETALLE_PERSONAL_ASIGNADO) REFERENCES DETALLE_PERSONAL (ID_DETALLE_PERSONAL),
    FOREIGN KEY (ID_DETALLE_CATERING) REFERENCES DETALLE_CATERING (ID_DETALLE_CATERING)
);

-- EVALUACIONES POSTEVENTO

CREATE TABLE EVALUACIONES_POSTEVENTO (
    ID_EVALUACION INT AUTO_INCREMENT PRIMARY KEY,
    ID_EVENTO INT NOT NULL,
    FECHA_EVALUACION DATETIME NOT NULL,
    ASPECTOS_VALORADOS TEXT NOT NULL,
    PUNTUACION_TOTAL DECIMAL(5,2) CHECK (PUNTUACION_TOTAL >= 0 AND PUNTUACION_TOTAL <= 10),
    COMENTARIOS_CLIENTE TEXT,
    INCIDENCIAS_REPORTADAS TEXT,
    LECCIONES_APRENDIDAS TEXT,
    RECOMENDACIONES_FUTURAS TEXT,
    FOREIGN KEY (ID_EVENTO) REFERENCES EVENTO(ID_EVENTO) ON DELETE CASCADE
);